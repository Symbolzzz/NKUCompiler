Terminals unused in grammar

    LINECOMMENT
    LB
    RB
    ASSIGNPLUS
    ASSIGNMINUS
    ASSIGNMUL
    ASSIGNDIV


Grammar

    0 $accept: Program $end

    1 Program: Stmts

    2 Stmts: Stmt
    3      | Stmts Stmt

    4 Stmt: AssignStmt
    5     | BlockStmt
    6     | IfStmt
    7     | ReturnStmt
    8     | ExprStmt
    9     | DeclStmt
   10     | WhileStmt
   11     | ContinueStmt
   12     | BreakStmt
   13     | FuncDef
   14     | SEMICOLON

   15 AssignStmt: LVal ASSIGN Exp SEMICOLON

   16 ExprStmt: Exp SEMICOLON

   17 $@1: %empty

   18 BlockStmt: LBRACE $@1 Stmts RBRACE

   19 $@2: %empty

   20 BlockStmt: LBRACE $@2 RBRACE

   21 IfStmt: IF LPAREN Cond RPAREN Stmt
   22       | IF LPAREN Cond RPAREN Stmt ELSE Stmt

   23 WhileStmt: WHILE LPAREN Cond RPAREN Stmt

   24 ContinueStmt: CONTINUE SEMICOLON

   25 BreakStmt: BREAK SEMICOLON

   26 ReturnStmt: RETURN Exp SEMICOLON

   27 Exp: AddExp

   28 Cond: LOrExp

   29 LVal: ID

   30 PrimaryExp: LPAREN Exp RPAREN
   31           | LVal
   32           | INTEGER
   33           | ID LPAREN CParameters RPAREN
   34           | ID LPAREN RPAREN

   35 SlgExp: PrimaryExp
   36       | SUB SlgExp
   37       | ADD SlgExp
   38       | NON SlgExp
   39       | INPLUS SlgExp
   40       | INMINUS SlgExp

   41 MulExp: SlgExp
   42       | MulExp MUL SlgExp
   43       | MulExp DIV SlgExp
   44       | MulExp DELIVERY SlgExp

   45 AddExp: MulExp
   46       | AddExp ADD MulExp
   47       | AddExp SUB MulExp

   48 RelExp: AddExp
   49       | RelExp LESS AddExp
   50       | RelExp MORE AddExp
   51       | RelExp LESSEQ AddExp
   52       | RelExp MOREEQ AddExp
   53       | RelExp EQUAL AddExp
   54       | RelExp UNEQUAL AddExp

   55 LAndExp: RelExp
   56        | LAndExp AND RelExp

   57 LOrExp: LAndExp
   58       | LOrExp OR LAndExp

   59 Type: INT
   60     | VOID
   61     | CONST

   62 IDlist: IDlist COMMA ID ASSIGN Exp
   63       | IDlist COMMA ID
   64       | ID ASSIGN Exp
   65       | ID

   66 DeclStmt: Type IDlist SEMICOLON

   67 Parameters: Parameters COMMA Type ID ASSIGN INTEGER
   68           | Parameters COMMA Type ID
   69           | Type ID ASSIGN INTEGER
   70           | Type ID

   71 CParameters: CParameters COMMA Exp
   72            | Exp

   73 $@3: %empty

   74 FuncDef: Type ID LPAREN $@3 RPAREN Stmt

   75 $@4: %empty

   76 FuncDef: Type ID LPAREN Parameters $@4 RPAREN Stmt


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <strtype> (258) 29 33 34 62 63 64 65 67 68 69 70 74 76
    INTEGER <itype> (259) 32 67 69
    IF (260) 21 22
    ELSE (261) 22
    LINECOMMENT (262)
    WHILE (263) 23
    CONTINUE (264) 24
    BREAK (265) 25
    INT (266) 59
    VOID (267) 60
    CONST (268) 61
    LPAREN (269) 21 22 23 30 33 34 74 76
    RPAREN (270) 21 22 23 30 33 34 74 76
    LB (271)
    RB (272)
    LBRACE (273) 18 20
    RBRACE (274) 18 20
    SEMICOLON (275) 14 15 16 24 25 26 66
    COMMA (276) 62 63 67 68 71
    ADD (277) 37 46
    SUB (278) 36 47
    MUL (279) 42
    DIV (280) 43
    OR (281) 58
    AND (282) 56
    LESS (283) 49
    MORE (284) 50
    LESSEQ (285) 51
    MOREEQ (286) 52
    EQUAL (287) 53
    UNEQUAL (288) 54
    DELIVERY (289) 44
    ASSIGNPLUS (290)
    ASSIGNMINUS (291)
    ASSIGNMUL (292)
    ASSIGNDIV (293)
    ASSIGN (294) 15 62 64 67 69
    UMNUS (295)
    POSITIVE (296)
    NON (297) 38
    INPLUS (298) 39
    INMINUS (299) 40
    RETURN (300) 26
    THEN (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    Stmts <stmttype> (48)
        on left: 2 3
        on right: 1 3 18
    Stmt <stmttype> (49)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 21 22 23 74 76
    AssignStmt <stmttype> (50)
        on left: 15
        on right: 4
    ExprStmt <stmttype> (51)
        on left: 16
        on right: 8
    BlockStmt <stmttype> (52)
        on left: 18 20
        on right: 5
    IfStmt <stmttype> (53)
        on left: 21 22
        on right: 6
    BreakStmt <stmttype> (54)
        on left: 25
        on right: 12
    WhileStmt <stmttype> (55)
        on left: 23
        on right: 10
    ContinueStmt <stmttype> (56)
        on left: 24
        on right: 11
    ReturnStmt <stmttype> (57)
        on left: 26
        on right: 7
    DeclStmt <stmttype> (58)
        on left: 66
        on right: 9
    FuncDef <stmttype> (59)
        on left: 74 76
        on right: 13
    Exp <exprtype> (60)
        on left: 27
        on right: 15 16 26 30 62 64 71 72
    AddExp <exprtype> (61)
        on left: 45 46 47
        on right: 27 46 47 48 49 50 51 52 53 54
    MulExp <exprtype> (62)
        on left: 41 42 43 44
        on right: 42 43 44 45 46 47
    SlgExp <exprtype> (63)
        on left: 35 36 37 38 39 40
        on right: 36 37 38 39 40 41 42 43 44
    Cond <exprtype> (64)
        on left: 28
        on right: 21 22 23
    LOrExp <exprtype> (65)
        on left: 57 58
        on right: 28 58
    PrimaryExp <exprtype> (66)
        on left: 30 31 32 33 34
        on right: 35
    LVal <exprtype> (67)
        on left: 29
        on right: 15 31
    RelExp <exprtype> (68)
        on left: 48 49 50 51 52 53 54
        on right: 49 50 51 52 53 54 55 56
    LAndExp <exprtype> (69)
        on left: 55 56
        on right: 56 57 58
    IDlist <idlisttype> (70)
        on left: 62 63 64 65
        on right: 62 63 66
    Parameters <Parameterlisttype> (71)
        on left: 67 68 69 70
        on right: 67 68 76
    CParameters <Parameterlisttype> (72)
        on left: 71 72
        on right: 33 71
    Type <type> (73)
        on left: 59 60 61
        on right: 66 67 68 69 70 74 76
    Program (74)
        on left: 1
        on right: 0
    $@1 (75)
        on left: 17
        on right: 18
    $@2 (76)
        on left: 19
        on right: 20
    $@3 (77)
        on left: 73
        on right: 74
    $@4 (78)
        on left: 75
        on right: 76


State 0

    0 $accept: . Program $end

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmts         go to state 19
    Stmt          go to state 20
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37
    Program       go to state 38


State 1

   29 LVal: ID .
   33 PrimaryExp: ID . LPAREN CParameters RPAREN
   34           | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 39

    $default  reduce using rule 29 (LVal)


State 2

   32 PrimaryExp: INTEGER .

    $default  reduce using rule 32 (PrimaryExp)


State 3

   21 IfStmt: IF . LPAREN Cond RPAREN Stmt
   22       | IF . LPAREN Cond RPAREN Stmt ELSE Stmt

    LPAREN  shift, and go to state 40


State 4

   23 WhileStmt: WHILE . LPAREN Cond RPAREN Stmt

    LPAREN  shift, and go to state 41


State 5

   24 ContinueStmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 6

   25 BreakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 7

   59 Type: INT .

    $default  reduce using rule 59 (Type)


State 8

   60 Type: VOID .

    $default  reduce using rule 60 (Type)


State 9

   61 Type: CONST .

    $default  reduce using rule 61 (Type)


State 10

   30 PrimaryExp: LPAREN . Exp RPAREN

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    Exp         go to state 44
    AddExp      go to state 32
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 11

   18 BlockStmt: LBRACE . $@1 Stmts RBRACE
   20          | LBRACE . $@2 RBRACE

    RBRACE    reduce using rule 19 ($@2)
    $default  reduce using rule 17 ($@1)

    $@1  go to state 46
    $@2  go to state 47


State 12

   14 Stmt: SEMICOLON .

    $default  reduce using rule 14 (Stmt)


State 13

   37 SlgExp: ADD . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 48
    PrimaryExp  go to state 35
    LVal        go to state 45


State 14

   36 SlgExp: SUB . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 49
    PrimaryExp  go to state 35
    LVal        go to state 45


State 15

   38 SlgExp: NON . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 50
    PrimaryExp  go to state 35
    LVal        go to state 45


State 16

   39 SlgExp: INPLUS . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 51
    PrimaryExp  go to state 35
    LVal        go to state 45


State 17

   40 SlgExp: INMINUS . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 52
    PrimaryExp  go to state 35
    LVal        go to state 45


State 18

   26 ReturnStmt: RETURN . Exp SEMICOLON

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    Exp         go to state 53
    AddExp      go to state 32
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 19

    1 Program: Stmts .
    3 Stmts: Stmts . Stmt

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    $default  reduce using rule 1 (Program)

    Stmt          go to state 54
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 20

    2 Stmts: Stmt .

    $default  reduce using rule 2 (Stmts)


State 21

    4 Stmt: AssignStmt .

    $default  reduce using rule 4 (Stmt)


State 22

    8 Stmt: ExprStmt .

    $default  reduce using rule 8 (Stmt)


State 23

    5 Stmt: BlockStmt .

    $default  reduce using rule 5 (Stmt)


State 24

    6 Stmt: IfStmt .

    $default  reduce using rule 6 (Stmt)


State 25

   12 Stmt: BreakStmt .

    $default  reduce using rule 12 (Stmt)


State 26

   10 Stmt: WhileStmt .

    $default  reduce using rule 10 (Stmt)


State 27

   11 Stmt: ContinueStmt .

    $default  reduce using rule 11 (Stmt)


State 28

    7 Stmt: ReturnStmt .

    $default  reduce using rule 7 (Stmt)


State 29

    9 Stmt: DeclStmt .

    $default  reduce using rule 9 (Stmt)


State 30

   13 Stmt: FuncDef .

    $default  reduce using rule 13 (Stmt)


State 31

   16 ExprStmt: Exp . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 32

   27 Exp: AddExp .
   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 27 (Exp)


State 33

   42 MulExp: MulExp . MUL SlgExp
   43       | MulExp . DIV SlgExp
   44       | MulExp . DELIVERY SlgExp
   45 AddExp: MulExp .

    MUL       shift, and go to state 58
    DIV       shift, and go to state 59
    DELIVERY  shift, and go to state 60

    $default  reduce using rule 45 (AddExp)


State 34

   41 MulExp: SlgExp .

    $default  reduce using rule 41 (MulExp)


State 35

   35 SlgExp: PrimaryExp .

    $default  reduce using rule 35 (SlgExp)


State 36

   15 AssignStmt: LVal . ASSIGN Exp SEMICOLON
   31 PrimaryExp: LVal .

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 31 (PrimaryExp)


State 37

   66 DeclStmt: Type . IDlist SEMICOLON
   74 FuncDef: Type . ID LPAREN $@3 RPAREN Stmt
   76        | Type . ID LPAREN Parameters $@4 RPAREN Stmt

    ID  shift, and go to state 62

    IDlist  go to state 63


State 38

    0 $accept: Program . $end

    $end  shift, and go to state 64


State 39

   33 PrimaryExp: ID LPAREN . CParameters RPAREN
   34           | ID LPAREN . RPAREN

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    RPAREN   shift, and go to state 65
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    Exp          go to state 66
    AddExp       go to state 32
    MulExp       go to state 33
    SlgExp       go to state 34
    PrimaryExp   go to state 35
    LVal         go to state 45
    CParameters  go to state 67


State 40

   21 IfStmt: IF LPAREN . Cond RPAREN Stmt
   22       | IF LPAREN . Cond RPAREN Stmt ELSE Stmt

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 68
    MulExp      go to state 33
    SlgExp      go to state 34
    Cond        go to state 69
    LOrExp      go to state 70
    PrimaryExp  go to state 35
    LVal        go to state 45
    RelExp      go to state 71
    LAndExp     go to state 72


State 41

   23 WhileStmt: WHILE LPAREN . Cond RPAREN Stmt

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 68
    MulExp      go to state 33
    SlgExp      go to state 34
    Cond        go to state 73
    LOrExp      go to state 70
    PrimaryExp  go to state 35
    LVal        go to state 45
    RelExp      go to state 71
    LAndExp     go to state 72


State 42

   24 ContinueStmt: CONTINUE SEMICOLON .

    $default  reduce using rule 24 (ContinueStmt)


State 43

   25 BreakStmt: BREAK SEMICOLON .

    $default  reduce using rule 25 (BreakStmt)


State 44

   30 PrimaryExp: LPAREN Exp . RPAREN

    RPAREN  shift, and go to state 74


State 45

   31 PrimaryExp: LVal .

    $default  reduce using rule 31 (PrimaryExp)


State 46

   18 BlockStmt: LBRACE $@1 . Stmts RBRACE

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmts         go to state 75
    Stmt          go to state 20
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 47

   20 BlockStmt: LBRACE $@2 . RBRACE

    RBRACE  shift, and go to state 76


State 48

   37 SlgExp: ADD SlgExp .

    $default  reduce using rule 37 (SlgExp)


State 49

   36 SlgExp: SUB SlgExp .

    $default  reduce using rule 36 (SlgExp)


State 50

   38 SlgExp: NON SlgExp .

    $default  reduce using rule 38 (SlgExp)


State 51

   39 SlgExp: INPLUS SlgExp .

    $default  reduce using rule 39 (SlgExp)


State 52

   40 SlgExp: INMINUS SlgExp .

    $default  reduce using rule 40 (SlgExp)


State 53

   26 ReturnStmt: RETURN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 54

    3 Stmts: Stmts Stmt .

    $default  reduce using rule 3 (Stmts)


State 55

   16 ExprStmt: Exp SEMICOLON .

    $default  reduce using rule 16 (ExprStmt)


State 56

   46 AddExp: AddExp ADD . MulExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    MulExp      go to state 78
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 57

   47 AddExp: AddExp SUB . MulExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    MulExp      go to state 79
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 58

   42 MulExp: MulExp MUL . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 80
    PrimaryExp  go to state 35
    LVal        go to state 45


State 59

   43 MulExp: MulExp DIV . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 81
    PrimaryExp  go to state 35
    LVal        go to state 45


State 60

   44 MulExp: MulExp DELIVERY . SlgExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    SlgExp      go to state 82
    PrimaryExp  go to state 35
    LVal        go to state 45


State 61

   15 AssignStmt: LVal ASSIGN . Exp SEMICOLON

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    Exp         go to state 83
    AddExp      go to state 32
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 62

   64 IDlist: ID . ASSIGN Exp
   65       | ID .
   74 FuncDef: Type ID . LPAREN $@3 RPAREN Stmt
   76        | Type ID . LPAREN Parameters $@4 RPAREN Stmt

    LPAREN  shift, and go to state 84
    ASSIGN  shift, and go to state 85

    $default  reduce using rule 65 (IDlist)


State 63

   62 IDlist: IDlist . COMMA ID ASSIGN Exp
   63       | IDlist . COMMA ID
   66 DeclStmt: Type IDlist . SEMICOLON

    SEMICOLON  shift, and go to state 86
    COMMA      shift, and go to state 87


State 64

    0 $accept: Program $end .

    $default  accept


State 65

   34 PrimaryExp: ID LPAREN RPAREN .

    $default  reduce using rule 34 (PrimaryExp)


State 66

   72 CParameters: Exp .

    $default  reduce using rule 72 (CParameters)


State 67

   33 PrimaryExp: ID LPAREN CParameters . RPAREN
   71 CParameters: CParameters . COMMA Exp

    RPAREN  shift, and go to state 88
    COMMA   shift, and go to state 89


State 68

   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp
   48 RelExp: AddExp .

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 48 (RelExp)


State 69

   21 IfStmt: IF LPAREN Cond . RPAREN Stmt
   22       | IF LPAREN Cond . RPAREN Stmt ELSE Stmt

    RPAREN  shift, and go to state 90


State 70

   28 Cond: LOrExp .
   58 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 91

    $default  reduce using rule 28 (Cond)


State 71

   49 RelExp: RelExp . LESS AddExp
   50       | RelExp . MORE AddExp
   51       | RelExp . LESSEQ AddExp
   52       | RelExp . MOREEQ AddExp
   53       | RelExp . EQUAL AddExp
   54       | RelExp . UNEQUAL AddExp
   55 LAndExp: RelExp .

    LESS     shift, and go to state 92
    MORE     shift, and go to state 93
    LESSEQ   shift, and go to state 94
    MOREEQ   shift, and go to state 95
    EQUAL    shift, and go to state 96
    UNEQUAL  shift, and go to state 97

    $default  reduce using rule 55 (LAndExp)


State 72

   56 LAndExp: LAndExp . AND RelExp
   57 LOrExp: LAndExp .

    AND  shift, and go to state 98

    $default  reduce using rule 57 (LOrExp)


State 73

   23 WhileStmt: WHILE LPAREN Cond . RPAREN Stmt

    RPAREN  shift, and go to state 99


State 74

   30 PrimaryExp: LPAREN Exp RPAREN .

    $default  reduce using rule 30 (PrimaryExp)


State 75

    3 Stmts: Stmts . Stmt
   18 BlockStmt: LBRACE $@1 Stmts . RBRACE

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    RBRACE     shift, and go to state 100
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmt          go to state 54
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 76

   20 BlockStmt: LBRACE $@2 RBRACE .

    $default  reduce using rule 20 (BlockStmt)


State 77

   26 ReturnStmt: RETURN Exp SEMICOLON .

    $default  reduce using rule 26 (ReturnStmt)


State 78

   42 MulExp: MulExp . MUL SlgExp
   43       | MulExp . DIV SlgExp
   44       | MulExp . DELIVERY SlgExp
   46 AddExp: AddExp ADD MulExp .

    MUL       shift, and go to state 58
    DIV       shift, and go to state 59
    DELIVERY  shift, and go to state 60

    $default  reduce using rule 46 (AddExp)


State 79

   42 MulExp: MulExp . MUL SlgExp
   43       | MulExp . DIV SlgExp
   44       | MulExp . DELIVERY SlgExp
   47 AddExp: AddExp SUB MulExp .

    MUL       shift, and go to state 58
    DIV       shift, and go to state 59
    DELIVERY  shift, and go to state 60

    $default  reduce using rule 47 (AddExp)


State 80

   42 MulExp: MulExp MUL SlgExp .

    $default  reduce using rule 42 (MulExp)


State 81

   43 MulExp: MulExp DIV SlgExp .

    $default  reduce using rule 43 (MulExp)


State 82

   44 MulExp: MulExp DELIVERY SlgExp .

    $default  reduce using rule 44 (MulExp)


State 83

   15 AssignStmt: LVal ASSIGN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 101


State 84

   74 FuncDef: Type ID LPAREN . $@3 RPAREN Stmt
   76        | Type ID LPAREN . Parameters $@4 RPAREN Stmt

    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    CONST  shift, and go to state 9

    $default  reduce using rule 73 ($@3)

    Parameters  go to state 102
    Type        go to state 103
    $@3         go to state 104


State 85

   64 IDlist: ID ASSIGN . Exp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    Exp         go to state 105
    AddExp      go to state 32
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 86

   66 DeclStmt: Type IDlist SEMICOLON .

    $default  reduce using rule 66 (DeclStmt)


State 87

   62 IDlist: IDlist COMMA . ID ASSIGN Exp
   63       | IDlist COMMA . ID

    ID  shift, and go to state 106


State 88

   33 PrimaryExp: ID LPAREN CParameters RPAREN .

    $default  reduce using rule 33 (PrimaryExp)


State 89

   71 CParameters: CParameters COMMA . Exp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    Exp         go to state 107
    AddExp      go to state 32
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 90

   21 IfStmt: IF LPAREN Cond RPAREN . Stmt
   22       | IF LPAREN Cond RPAREN . Stmt ELSE Stmt

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmt          go to state 108
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 91

   58 LOrExp: LOrExp OR . LAndExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 68
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45
    RelExp      go to state 71
    LAndExp     go to state 109


State 92

   49 RelExp: RelExp LESS . AddExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 110
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 93

   50 RelExp: RelExp MORE . AddExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 111
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 94

   51 RelExp: RelExp LESSEQ . AddExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 112
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 95

   52 RelExp: RelExp MOREEQ . AddExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 113
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 96

   53 RelExp: RelExp EQUAL . AddExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 114
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 97

   54 RelExp: RelExp UNEQUAL . AddExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 115
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 98

   56 LAndExp: LAndExp AND . RelExp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    AddExp      go to state 68
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45
    RelExp      go to state 116


State 99

   23 WhileStmt: WHILE LPAREN Cond RPAREN . Stmt

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmt          go to state 117
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 100

   18 BlockStmt: LBRACE $@1 Stmts RBRACE .

    $default  reduce using rule 18 (BlockStmt)


State 101

   15 AssignStmt: LVal ASSIGN Exp SEMICOLON .

    $default  reduce using rule 15 (AssignStmt)


State 102

   67 Parameters: Parameters . COMMA Type ID ASSIGN INTEGER
   68           | Parameters . COMMA Type ID
   76 FuncDef: Type ID LPAREN Parameters . $@4 RPAREN Stmt

    COMMA  shift, and go to state 118

    $default  reduce using rule 75 ($@4)

    $@4  go to state 119


State 103

   69 Parameters: Type . ID ASSIGN INTEGER
   70           | Type . ID

    ID  shift, and go to state 120


State 104

   74 FuncDef: Type ID LPAREN $@3 . RPAREN Stmt

    RPAREN  shift, and go to state 121


State 105

   64 IDlist: ID ASSIGN Exp .

    $default  reduce using rule 64 (IDlist)


State 106

   62 IDlist: IDlist COMMA ID . ASSIGN Exp
   63       | IDlist COMMA ID .

    ASSIGN  shift, and go to state 122

    $default  reduce using rule 63 (IDlist)


State 107

   71 CParameters: CParameters COMMA Exp .

    $default  reduce using rule 71 (CParameters)


State 108

   21 IfStmt: IF LPAREN Cond RPAREN Stmt .
   22       | IF LPAREN Cond RPAREN Stmt . ELSE Stmt

    ELSE  shift, and go to state 123

    $default  reduce using rule 21 (IfStmt)


State 109

   56 LAndExp: LAndExp . AND RelExp
   58 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 98

    $default  reduce using rule 58 (LOrExp)


State 110

   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp
   49 RelExp: RelExp LESS AddExp .

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 49 (RelExp)


State 111

   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp
   50 RelExp: RelExp MORE AddExp .

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 50 (RelExp)


State 112

   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp
   51 RelExp: RelExp LESSEQ AddExp .

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 51 (RelExp)


State 113

   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp
   52 RelExp: RelExp MOREEQ AddExp .

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 52 (RelExp)


State 114

   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp
   53 RelExp: RelExp EQUAL AddExp .

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 53 (RelExp)


State 115

   46 AddExp: AddExp . ADD MulExp
   47       | AddExp . SUB MulExp
   54 RelExp: RelExp UNEQUAL AddExp .

    ADD  shift, and go to state 56
    SUB  shift, and go to state 57

    $default  reduce using rule 54 (RelExp)


State 116

   49 RelExp: RelExp . LESS AddExp
   50       | RelExp . MORE AddExp
   51       | RelExp . LESSEQ AddExp
   52       | RelExp . MOREEQ AddExp
   53       | RelExp . EQUAL AddExp
   54       | RelExp . UNEQUAL AddExp
   56 LAndExp: LAndExp AND RelExp .

    LESS     shift, and go to state 92
    MORE     shift, and go to state 93
    LESSEQ   shift, and go to state 94
    MOREEQ   shift, and go to state 95
    EQUAL    shift, and go to state 96
    UNEQUAL  shift, and go to state 97

    $default  reduce using rule 56 (LAndExp)


State 117

   23 WhileStmt: WHILE LPAREN Cond RPAREN Stmt .

    $default  reduce using rule 23 (WhileStmt)


State 118

   67 Parameters: Parameters COMMA . Type ID ASSIGN INTEGER
   68           | Parameters COMMA . Type ID

    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    CONST  shift, and go to state 9

    Type  go to state 124


State 119

   76 FuncDef: Type ID LPAREN Parameters $@4 . RPAREN Stmt

    RPAREN  shift, and go to state 125


State 120

   69 Parameters: Type ID . ASSIGN INTEGER
   70           | Type ID .

    ASSIGN  shift, and go to state 126

    $default  reduce using rule 70 (Parameters)


State 121

   74 FuncDef: Type ID LPAREN $@3 RPAREN . Stmt

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmt          go to state 127
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 122

   62 IDlist: IDlist COMMA ID ASSIGN . Exp

    ID       shift, and go to state 1
    INTEGER  shift, and go to state 2
    LPAREN   shift, and go to state 10
    ADD      shift, and go to state 13
    SUB      shift, and go to state 14
    NON      shift, and go to state 15
    INPLUS   shift, and go to state 16
    INMINUS  shift, and go to state 17

    Exp         go to state 128
    AddExp      go to state 32
    MulExp      go to state 33
    SlgExp      go to state 34
    PrimaryExp  go to state 35
    LVal        go to state 45


State 123

   22 IfStmt: IF LPAREN Cond RPAREN Stmt ELSE . Stmt

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmt          go to state 129
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 124

   67 Parameters: Parameters COMMA Type . ID ASSIGN INTEGER
   68           | Parameters COMMA Type . ID

    ID  shift, and go to state 130


State 125

   76 FuncDef: Type ID LPAREN Parameters $@4 RPAREN . Stmt

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    IF         shift, and go to state 3
    WHILE      shift, and go to state 4
    CONTINUE   shift, and go to state 5
    BREAK      shift, and go to state 6
    INT        shift, and go to state 7
    VOID       shift, and go to state 8
    CONST      shift, and go to state 9
    LPAREN     shift, and go to state 10
    LBRACE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12
    ADD        shift, and go to state 13
    SUB        shift, and go to state 14
    NON        shift, and go to state 15
    INPLUS     shift, and go to state 16
    INMINUS    shift, and go to state 17
    RETURN     shift, and go to state 18

    Stmt          go to state 131
    AssignStmt    go to state 21
    ExprStmt      go to state 22
    BlockStmt     go to state 23
    IfStmt        go to state 24
    BreakStmt     go to state 25
    WhileStmt     go to state 26
    ContinueStmt  go to state 27
    ReturnStmt    go to state 28
    DeclStmt      go to state 29
    FuncDef       go to state 30
    Exp           go to state 31
    AddExp        go to state 32
    MulExp        go to state 33
    SlgExp        go to state 34
    PrimaryExp    go to state 35
    LVal          go to state 36
    Type          go to state 37


State 126

   69 Parameters: Type ID ASSIGN . INTEGER

    INTEGER  shift, and go to state 132


State 127

   74 FuncDef: Type ID LPAREN $@3 RPAREN Stmt .

    $default  reduce using rule 74 (FuncDef)


State 128

   62 IDlist: IDlist COMMA ID ASSIGN Exp .

    $default  reduce using rule 62 (IDlist)


State 129

   22 IfStmt: IF LPAREN Cond RPAREN Stmt ELSE Stmt .

    $default  reduce using rule 22 (IfStmt)


State 130

   67 Parameters: Parameters COMMA Type ID . ASSIGN INTEGER
   68           | Parameters COMMA Type ID .

    ASSIGN  shift, and go to state 133

    $default  reduce using rule 68 (Parameters)


State 131

   76 FuncDef: Type ID LPAREN Parameters $@4 RPAREN Stmt .

    $default  reduce using rule 76 (FuncDef)


State 132

   69 Parameters: Type ID ASSIGN INTEGER .

    $default  reduce using rule 69 (Parameters)


State 133

   67 Parameters: Parameters COMMA Type ID ASSIGN . INTEGER

    INTEGER  shift, and go to state 134


State 134

   67 Parameters: Parameters COMMA Type ID ASSIGN INTEGER .

    $default  reduce using rule 67 (Parameters)
